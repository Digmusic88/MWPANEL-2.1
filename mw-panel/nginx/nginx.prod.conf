# =============================================================================
# MW PANEL 2.0 - CONFIGURACIÓN NGINX PARA PRODUCCIÓN
# =============================================================================
# Configuración optimizada con SSL, compresión, cache y seguridad
# =============================================================================

# Configuración global
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimizaciones de rendimiento
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # MIME types y configuración básica
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Formato de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;

    # Optimizaciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Tamaños de buffer
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeouts
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;

    # Compresión gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Cache para archivos estáticos
    map $sent_http_content_type $expires {
        "text/html"                 epoch;
        "text/css"                  max;
        "application/javascript"    max;
        "image/png"                 max;
        "image/jpg"                 max;
        "image/jpeg"                max;
        "image/gif"                 max;
        "image/ico"                 max;
        "image/svg+xml"             max;
        "font/truetype"             max;
        "font/opentype"             max;
        "application/vnd.ms-fontobject" max;
        default                     off;
    }

    expires $expires;

    # Upstream backend
    upstream backend {
        server backend:3000;
        keepalive 32;
    }

    # Redirección HTTP a HTTPS
    server {
        listen 80;
        server_name ${DOMAIN} www.${DOMAIN};
        
        # Endpoint de salud para load balancers
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /usr/share/nginx/html;
            allow all;
        }
        
        # Redireccionar todo el resto a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Servidor HTTPS principal
    server {
        listen 443 ssl http2;
        server_name ${DOMAIN} www.${DOMAIN};

        # Certificados SSL
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        
        # Configuración SSL segura
        include /etc/nginx/ssl-params.conf;
        
        # Headers de seguridad
        include /etc/nginx/security-headers.conf;

        # Directorio raíz
        root /usr/share/nginx/html;
        index index.html;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        # Logs específicos del dominio
        access_log /var/log/nginx/mw-panel-access.log detailed;
        error_log /var/log/nginx/mw-panel-error.log;

        # API Backend
        location /api/ {
            # Rate limiting específico para API
            limit_req zone=api burst=10 nodelay;
            
            # Proxy al backend
            proxy_pass http://backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer configuration
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache bypass
            proxy_cache_bypass $http_upgrade;
        }

        # Login endpoint con rate limiting más estricto
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://backend/auth/login;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Archivos subidos (uploads)
        location /uploads/ {
            alias /usr/share/nginx/uploads/;
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Seguridad para uploads
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Archivos estáticos del frontend
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # Compresión para archivos específicos
            gzip_static on;
        }

        # Manifest y service worker
        location ~* \.(webmanifest|manifest\.json)$ {
            expires 1d;
            add_header Cache-Control "public";
        }

        location /sw.js {
            expires 1d;
            add_header Cache-Control "public";
        }

        # Robots.txt y sitemap
        location = /robots.txt {
            expires 1d;
            add_header Cache-Control "public";
        }

        location = /sitemap.xml {
            expires 1d;
            add_header Cache-Control "public";
        }

        # Endpoint de salud
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Métricas (solo acceso local)
        location /metrics {
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Red Docker
            deny all;
            
            proxy_pass http://backend/metrics;
            proxy_set_header Host $host;
        }

        # Bloquear acceso a archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Frontend SPA - debe ir al final
        location / {
            try_files $uri $uri/ /index.html;
            
            # Headers para SPA
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Error pages personalizadas
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Redirección www a no-www (opcional)
    server {
        listen 443 ssl http2;
        server_name www.${DOMAIN};
        
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        
        include /etc/nginx/ssl-params.conf;
        
        return 301 https://${DOMAIN}$request_uri;
    }
}
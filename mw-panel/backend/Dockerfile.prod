# =============================================================================
# MW PANEL 2.0 - DOCKERFILE BACKEND PRODUCCIÓN
# =============================================================================
# Imagen optimizada para producción con multi-stage build
# =============================================================================

# Etapa 1: Builder
FROM node:18-alpine AS builder

LABEL maintainer="MW Panel Team"
LABEL version="2.0"
LABEL description="MW Panel Backend - Production Build"

# Instalar dependencias del sistema
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Crear directorio de trabajo
WORKDIR /app

# Copiar archivos de configuración de dependencias
COPY package*.json ./
COPY tsconfig*.json ./
COPY nest-cli.json ./

# Instalar dependencias de producción
RUN npm ci --only=production && npm cache clean --force

# Instalar dependencias de desarrollo para el build
RUN npm ci

# Copiar código fuente
COPY src/ ./src/

# Construir aplicación
RUN npm run build

# Limpiar devDependencies
RUN npm ci --only=production && npm cache clean --force

# =============================================================================
# Etapa 2: Runtime
FROM node:18-alpine AS runtime

# Instalar dependencias del sistema para runtime
RUN apk add --no-cache \
    curl \
    tzdata \
    tini \
    dumb-init

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

# Crear directorios necesarios
RUN mkdir -p /app/dist /app/uploads /app/logs && \
    chown -R nestjs:nodejs /app

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos desde builder
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./

# Copiar archivos adicionales necesarios
COPY --chown=nestjs:nodejs ./uploads ./uploads/

# Configurar timezone
ENV TZ=Europe/Madrid
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Variables de entorno de producción
ENV NODE_ENV=production
ENV PORT=3000
ENV NODE_OPTIONS="--max-old-space-size=1024"

# Configuración de logging
ENV NPM_CONFIG_LOGLEVEL=warn
ENV NPM_CONFIG_UPDATE_NOTIFIER=false

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Cambiar a usuario no-root
USER nestjs

# Exponer puerto
EXPOSE 3000

# Comando de inicio con dumb-init para manejo de señales
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/main"]
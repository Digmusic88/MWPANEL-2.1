import { Repository } from 'typeorm';
import { ClassGroup } from '../students/entities/class-group.entity';
import { Student } from '../students/entities/student.entity';
import { Teacher } from '../teachers/entities/teacher.entity';
import { Course } from '../students/entities/course.entity';
import { AcademicYear } from '../students/entities/academic-year.entity';
import { CreateClassGroupDto } from './dto/create-class-group.dto';
import { UpdateClassGroupDto } from './dto/update-class-group.dto';
import { AssignStudentsDto } from './dto/assign-students.dto';
export declare class ClassGroupsService {
    private readonly classGroupRepository;
    private readonly studentRepository;
    private readonly teacherRepository;
    private readonly courseRepository;
    private readonly academicYearRepository;
    constructor(classGroupRepository: Repository<ClassGroup>, studentRepository: Repository<Student>, teacherRepository: Repository<Teacher>, courseRepository: Repository<Course>, academicYearRepository: Repository<AcademicYear>);
    findAll(): Promise<ClassGroup[]>;
    findOne(id: string): Promise<ClassGroup>;
    findByAcademicYear(academicYearId: string): Promise<ClassGroup[]>;
    findByCourse(courseId: string): Promise<ClassGroup[]>;
    findByTutor(tutorId: string): Promise<ClassGroup[]>;
    create(createClassGroupDto: CreateClassGroupDto): Promise<ClassGroup>;
    update(id: string, updateClassGroupDto: UpdateClassGroupDto): Promise<ClassGroup>;
    assignStudents(id: string, assignStudentsDto: AssignStudentsDto): Promise<ClassGroup>;
    removeStudent(id: string, studentId: string): Promise<ClassGroup>;
    assignTutor(id: string, tutorId: string): Promise<ClassGroup>;
    removeTutor(id: string): Promise<ClassGroup>;
    remove(id: string): Promise<void>;
    getAvailableStudents(courseId?: string): Promise<Student[]>;
    getAvailableTeachers(): Promise<Teacher[]>;
    getAvailableCourses(): Promise<Course[]>;
}
